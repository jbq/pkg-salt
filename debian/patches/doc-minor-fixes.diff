Description: Minor fixes to docs to remove warnings during build
Author: Joe Healy <joehealy@gmail.com>
Forwarded: no

--- a/doc/topics/conventions/formulas.rst	Tue Oct 22 21:33:26 2013 +1100
+++ b/doc/topics/conventions/formulas.rst	Tue Oct 22 22:28:45 2013 +1100
@@ -82,7 +82,7 @@
 ``require`` declaration which directs Salt to not install the ``python26``
 package until after the EPEL repository has also been installed:
 
-.. code:: yaml
+.. code-block:: yaml
 
     include:
       - epel
@@ -104,7 +104,7 @@
 machine is to include the :formula:`openstack-standalone-formula` directly from
 a :file:`top.sls` file:
 
-.. code:: yaml
+.. code-block:: yaml
 
     base:
       'myopenstackmaster':
@@ -113,7 +113,7 @@
 Quickly deploying OpenStack across several dedicated machines could also be
 done directly from a Top File and may look something like this:
 
-.. code:: yaml
+.. code-block:: yaml
 
     base:
       'controller':
@@ -189,7 +189,7 @@
 
 A sample skeleton for the ``README.rst`` file:
 
-.. code:: rest
+.. code-block:: rest
 
     foo
     ===
@@ -222,7 +222,7 @@
 
 :file:`map.jinja`:
 
-.. code:: jinja
+.. code-block:: jinja
 
     {% set mysql = salt['grains.filter_by']({
         'Debian': {
@@ -248,7 +248,7 @@
 Any of the values defined above can be fetched for the current platform in any
 state file using the following syntax:
 
-.. code:: yaml
+.. code-block:: yaml
 
     {% from "mysql/map.jinja" import mysql with context %}
 
@@ -319,7 +319,7 @@
 
 Any platform-specific states must be wrapped in conditional statements:
 
-.. code:: jinja
+.. code-block:: jinja
 
     {% if grains['os_family'] == 'Debian' %}
     ...
@@ -328,7 +328,7 @@
 A handy method for using platform-specific values is to create a lookup table
 using the :py:func:`~salt.modules.grains.filter_by` function:
 
-.. code:: jinja
+.. code-block:: jinja
 
     {% set apache = salt['grains.filter_by']({
         'Debian': {'conf': '/etc/apache2/conf.d'},
@@ -349,7 +349,7 @@
 Pillar. Pillar lookups must use the safe :py:func:`~salt.modules.pillar.get`
 and must provide a default value:
 
-.. code:: jinja
+.. code-block:: jinja
 
     {% if salt['pillar.get']('horizon:use_ssl', False) %}
     ssl_crt: {{ salt['pillar.get']('horizon:ssl_crt', '/etc/ssl/certs/horizon.crt') }}
@@ -369,7 +369,7 @@
 :ref:`execution modules <all-salt.modules>` and have access to all the system
 grains as well.
 
-.. code:: jinja
+.. code-block:: jinja
 
     {% if '/storage' in salt['mount.active']() %}
     /usr/local/etc/myfile.conf:
--- a/doc/topics/conventions/packaging.rst	Tue Oct 22 21:33:26 2013 +1100
+++ b/doc/topics/conventions/packaging.rst	Tue Oct 22 22:28:45 2013 +1100
@@ -15,7 +15,7 @@
 distribution.
 
 Single Package
-=============
+==============
 
 Shipping Salt as a single package, where the minion, master and all tools are
 together is perfectly acceptable and practiced by distributions such as
--- a/salt/client/__init__.py	Tue Oct 22 21:33:26 2013 +1100
+++ b/salt/client/__init__.py	Tue Oct 22 22:28:45 2013 +1100
@@ -338,7 +338,7 @@
 
         Usage:
 
-        .. code:: python
+        .. code-block:: python
 
             import salt.client
             client = salt.client.LocalClient()
@@ -346,7 +346,7 @@
 
         With authentication:
 
-        .. code:: yaml
+        .. code-block:: yaml
 
             # Master config
             ...
@@ -357,13 +357,13 @@
             ...
 
 
-        .. code:: python
+        .. code-block:: python
 
             ret = client.cmd('*', 'test.ping', [], username='fred', password='pw', eauth='pam')
 
         Compound command usage:
 
-        .. code:: python
+        .. code-block:: python
 
             ret = client.cmd('*', ['grains.items', 'cmd.run'], [[], ['whoami']])
 
--- a/salt/modules/upstart.py	Tue Oct 22 21:33:26 2013 +1100
+++ b/salt/modules/upstart.py	Tue Oct 22 22:28:45 2013 +1100
@@ -33,9 +33,10 @@
     stop on runlevel [016]
 
 .. warning::
-    This module should not be used on Red Hat systems. For these, the
-    :mod:`rh_service <salt.modules.rh_service>` module should be used, as it
-    supports the hybrid upstart/sysvinit system used in RHEL/CentOS 6.
+    This module should not be used on Red Hat systems. For these, 
+    the :mod:`rh_service <salt.modules.rh_service>` module should be
+    used, as it supports the hybrid upstart/sysvinit system used in
+    RHEL/CentOS 6.
 '''
 
 # Import python libs
